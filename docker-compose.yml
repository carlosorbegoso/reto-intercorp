version: '3'
services:

  microservice01:
    container_name: data-storage-service
    build:
      context: ./backend/DataStorageService
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      - DATABASE_URL=jdbc:postgresql://postgres:5432/reto
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=admin
      - KAFKA_BOOTSTRAP_SERVERS=kafka-broker-1:9092
    depends_on:
      - postgres
    networks:
      - spring-cloud-network
    restart: "always"

  microservice02:
    container_name: data-transformer-service
    build:
      context: ./backend/DataTransformerService
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka-broker-1:9092
    networks:
      - spring-cloud-network


  microservice04:
    container_name: data-view-service
    build:
      context: ./backend/DataViewerService
      dockerfile: Dockerfile
    ports:
      - "8084:8084"
    environment:
      - DATABASE_URL=jdbc:postgresql://postgres:5432/reto
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=admin
      - KAFKA_BOOTSTRAP_SERVERS=kafka-broker-1:9092
    depends_on:
      - postgres
    networks:
      - spring-cloud-network
    restart: "always"

  microservice05:
    container_name: xml-reader-service
    build:
      context: ./backend/XMLReaderService
      dockerfile: Dockerfile
    ports:
      - "8085:8085"

    environment:
        - KAFKA_BOOTSTRAP_SERVERS=kafka-broker-1:9092
    networks:
      - spring-cloud-network


  angular:
    container_name: web-angular
    build:
      context: ./reto-web
      dockerfile: Dockerfile
    ports:
      - "4200:80"
    networks:
      - spring-cloud-network


  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - spring-cloud-network

  kafka-broker-1:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-broker-1
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-1:9092,PLAINTEXT_INTERNAL://broker:29092,PLAINTEXT_HOST://localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    networks:
      - spring-cloud-network

  postgres:
    container_name: postgres
    image: "postgres:14"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=reto
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - spring-cloud-network

networks:
  spring-cloud-network:
    driver: bridge